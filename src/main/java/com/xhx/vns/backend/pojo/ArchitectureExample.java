package com.xhx.vns.backend.pojo;

import java.util.ArrayList;
import java.util.List;

public class ArchitectureExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public ArchitectureExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameIsNull() {
            addCriterion("architecture_name is null");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameIsNotNull() {
            addCriterion("architecture_name is not null");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameEqualTo(String value) {
            addCriterion("architecture_name =", value, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameNotEqualTo(String value) {
            addCriterion("architecture_name <>", value, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameGreaterThan(String value) {
            addCriterion("architecture_name >", value, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameGreaterThanOrEqualTo(String value) {
            addCriterion("architecture_name >=", value, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameLessThan(String value) {
            addCriterion("architecture_name <", value, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameLessThanOrEqualTo(String value) {
            addCriterion("architecture_name <=", value, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameLike(String value) {
            addCriterion("architecture_name like", value, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameNotLike(String value) {
            addCriterion("architecture_name not like", value, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameIn(List<String> values) {
            addCriterion("architecture_name in", values, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameNotIn(List<String> values) {
            addCriterion("architecture_name not in", values, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameBetween(String value1, String value2) {
            addCriterion("architecture_name between", value1, value2, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureNameNotBetween(String value1, String value2) {
            addCriterion("architecture_name not between", value1, value2, "architectureName");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeIsNull() {
            addCriterion("architecture_longitude is null");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeIsNotNull() {
            addCriterion("architecture_longitude is not null");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeEqualTo(Long value) {
            addCriterion("architecture_longitude =", value, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeNotEqualTo(Long value) {
            addCriterion("architecture_longitude <>", value, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeGreaterThan(Long value) {
            addCriterion("architecture_longitude >", value, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeGreaterThanOrEqualTo(Long value) {
            addCriterion("architecture_longitude >=", value, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeLessThan(Long value) {
            addCriterion("architecture_longitude <", value, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeLessThanOrEqualTo(Long value) {
            addCriterion("architecture_longitude <=", value, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeIn(List<Long> values) {
            addCriterion("architecture_longitude in", values, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeNotIn(List<Long> values) {
            addCriterion("architecture_longitude not in", values, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeBetween(Long value1, Long value2) {
            addCriterion("architecture_longitude between", value1, value2, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLongitudeNotBetween(Long value1, Long value2) {
            addCriterion("architecture_longitude not between", value1, value2, "architectureLongitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeIsNull() {
            addCriterion("architecture_latitude is null");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeIsNotNull() {
            addCriterion("architecture_latitude is not null");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeEqualTo(Long value) {
            addCriterion("architecture_latitude =", value, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeNotEqualTo(Long value) {
            addCriterion("architecture_latitude <>", value, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeGreaterThan(Long value) {
            addCriterion("architecture_latitude >", value, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeGreaterThanOrEqualTo(Long value) {
            addCriterion("architecture_latitude >=", value, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeLessThan(Long value) {
            addCriterion("architecture_latitude <", value, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeLessThanOrEqualTo(Long value) {
            addCriterion("architecture_latitude <=", value, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeIn(List<Long> values) {
            addCriterion("architecture_latitude in", values, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeNotIn(List<Long> values) {
            addCriterion("architecture_latitude not in", values, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeBetween(Long value1, Long value2) {
            addCriterion("architecture_latitude between", value1, value2, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureLatitudeNotBetween(Long value1, Long value2) {
            addCriterion("architecture_latitude not between", value1, value2, "architectureLatitude");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusIsNull() {
            addCriterion("architecture_status is null");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusIsNotNull() {
            addCriterion("architecture_status is not null");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusEqualTo(Byte value) {
            addCriterion("architecture_status =", value, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusNotEqualTo(Byte value) {
            addCriterion("architecture_status <>", value, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusGreaterThan(Byte value) {
            addCriterion("architecture_status >", value, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("architecture_status >=", value, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusLessThan(Byte value) {
            addCriterion("architecture_status <", value, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusLessThanOrEqualTo(Byte value) {
            addCriterion("architecture_status <=", value, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusIn(List<Byte> values) {
            addCriterion("architecture_status in", values, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusNotIn(List<Byte> values) {
            addCriterion("architecture_status not in", values, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusBetween(Byte value1, Byte value2) {
            addCriterion("architecture_status between", value1, value2, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArchitectureStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("architecture_status not between", value1, value2, "architectureStatus");
            return (Criteria) this;
        }

        public Criteria andArg1IsNull() {
            addCriterion("arg1 is null");
            return (Criteria) this;
        }

        public Criteria andArg1IsNotNull() {
            addCriterion("arg1 is not null");
            return (Criteria) this;
        }

        public Criteria andArg1EqualTo(String value) {
            addCriterion("arg1 =", value, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1NotEqualTo(String value) {
            addCriterion("arg1 <>", value, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1GreaterThan(String value) {
            addCriterion("arg1 >", value, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1GreaterThanOrEqualTo(String value) {
            addCriterion("arg1 >=", value, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1LessThan(String value) {
            addCriterion("arg1 <", value, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1LessThanOrEqualTo(String value) {
            addCriterion("arg1 <=", value, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1Like(String value) {
            addCriterion("arg1 like", value, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1NotLike(String value) {
            addCriterion("arg1 not like", value, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1In(List<String> values) {
            addCriterion("arg1 in", values, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1NotIn(List<String> values) {
            addCriterion("arg1 not in", values, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1Between(String value1, String value2) {
            addCriterion("arg1 between", value1, value2, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg1NotBetween(String value1, String value2) {
            addCriterion("arg1 not between", value1, value2, "arg1");
            return (Criteria) this;
        }

        public Criteria andArg2IsNull() {
            addCriterion("arg2 is null");
            return (Criteria) this;
        }

        public Criteria andArg2IsNotNull() {
            addCriterion("arg2 is not null");
            return (Criteria) this;
        }

        public Criteria andArg2EqualTo(String value) {
            addCriterion("arg2 =", value, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2NotEqualTo(String value) {
            addCriterion("arg2 <>", value, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2GreaterThan(String value) {
            addCriterion("arg2 >", value, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2GreaterThanOrEqualTo(String value) {
            addCriterion("arg2 >=", value, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2LessThan(String value) {
            addCriterion("arg2 <", value, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2LessThanOrEqualTo(String value) {
            addCriterion("arg2 <=", value, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2Like(String value) {
            addCriterion("arg2 like", value, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2NotLike(String value) {
            addCriterion("arg2 not like", value, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2In(List<String> values) {
            addCriterion("arg2 in", values, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2NotIn(List<String> values) {
            addCriterion("arg2 not in", values, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2Between(String value1, String value2) {
            addCriterion("arg2 between", value1, value2, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg2NotBetween(String value1, String value2) {
            addCriterion("arg2 not between", value1, value2, "arg2");
            return (Criteria) this;
        }

        public Criteria andArg3IsNull() {
            addCriterion("arg3 is null");
            return (Criteria) this;
        }

        public Criteria andArg3IsNotNull() {
            addCriterion("arg3 is not null");
            return (Criteria) this;
        }

        public Criteria andArg3EqualTo(String value) {
            addCriterion("arg3 =", value, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3NotEqualTo(String value) {
            addCriterion("arg3 <>", value, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3GreaterThan(String value) {
            addCriterion("arg3 >", value, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3GreaterThanOrEqualTo(String value) {
            addCriterion("arg3 >=", value, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3LessThan(String value) {
            addCriterion("arg3 <", value, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3LessThanOrEqualTo(String value) {
            addCriterion("arg3 <=", value, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3Like(String value) {
            addCriterion("arg3 like", value, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3NotLike(String value) {
            addCriterion("arg3 not like", value, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3In(List<String> values) {
            addCriterion("arg3 in", values, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3NotIn(List<String> values) {
            addCriterion("arg3 not in", values, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3Between(String value1, String value2) {
            addCriterion("arg3 between", value1, value2, "arg3");
            return (Criteria) this;
        }

        public Criteria andArg3NotBetween(String value1, String value2) {
            addCriterion("arg3 not between", value1, value2, "arg3");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table architecture
     *
     * @mbggenerated do_not_delete_during_merge Thu Apr 12 11:22:23 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table architecture
     *
     * @mbggenerated Thu Apr 12 11:22:23 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}